name: Run SLURM Jobs (Self-Hosted, Subfolder Support)

on:
  push:
    paths:
      - "input/**"

jobs:
  run-slurm:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare working and output directories
        run: |
          mkdir -p output
          export SLURM_TMP_BASE="/tmp/slurm_jobs_${GITHUB_RUN_ID}"
          mkdir -p "$SLURM_TMP_BASE"
          echo "SLURM_TMP_BASE=$SLURM_TMP_BASE" >> $GITHUB_ENV

      - name: Copy input subfolders to SLURM temp dir
        run: |
          for jobdir in input/*; do
            if [ -d "$jobdir" ]; then
              jobname=$(basename "$jobdir")
              mkdir -p "${SLURM_TMP_BASE}/${jobname}"
              cp -r "$jobdir"/* "${SLURM_TMP_BASE}/${jobname}/"
              echo "Copied $jobdir to ${SLURM_TMP_BASE}/${jobname}"
            fi
          done
          echo "Directory structure in temp dir:"
          tree "${SLURM_TMP_BASE}" || ls -R "${SLURM_TMP_BASE}"

      - name: Submit jobs to SLURM
        run: |
          > joblist.txt
          for jobdir in "${SLURM_TMP_BASE}"/*; do
            if [ -d "$jobdir" ]; then
              for script in "$jobdir"/*.sh "$jobdir"/*.txt; do
                [ -f "$script" ] || continue
                fname=$(basename "$script")
                jobname=$(basename "$jobdir")
                echo "Submitting $fname from $jobname..."
                jobid=$(sbatch --parsable \
                  --chdir="$jobdir" \
                  --output="${jobdir}/${fname}-%j.out" \
                  "$script")
                echo "${jobname}/${fname}:$jobid" >> joblist.txt
              done
            fi
          done
          echo "Submitted jobs:"
          cat joblist.txt

      - name: Wait for jobs to finish
        run: |
          echo "Waiting for SLURM jobs to complete..."
          while read line; do
            jobid=$(echo "$line" | cut -d: -f2)
            while squeue -j "$jobid" | grep -q "$jobid"; do
              sleep 10
            done
          done < joblist.txt

      - name: Check job exit codes
        run: |
          echo "Checking SLURM job exit codes..."
          failed=0
          while read line; do
            jobid=$(echo "$line" | cut -d: -f2)
            state=$(scontrol show job "$jobid" | awk -F= '/JobState=/{print $2}' | awk '{print $1}')
            exitcode=$(scontrol show job "$jobid" | awk -F= '/ExitCode=/{print $2}' | awk '{print $1}')
            echo "Job $jobid finished with state=$state exitcode=$exitcode"
            if [[ "$exitcode" != "0:0" ]]; then
              failed=1
            fi
          done < joblist.txt
          if [[ $failed -ne 0 ]]; then
            echo "One or more jobs failed."
            exit 1
          fi

      - name: Collect all output files
        run: |
          echo "Collecting all output files..."
          for jobdir in "${SLURM_TMP_BASE}"/*; do
            if [ -d "$jobdir" ]; then
              jobname=$(basename "$jobdir")
              mkdir -p "output/${jobname}"
              cp "$jobdir"/* "output/${jobname}/" || true
            fi
          done
          rm -rf "${SLURM_TMP_BASE}"

      - name: Commit output to repo
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add output/
          git commit -m "Add SLURM job output from run $GITHUB_RUN_ID" || echo "No changes to commit"
          git push

      - name: Upload output as artifact
        uses: actions/upload-artifact@v4
        with:
          name: slurm-job-output
          path: output/
