{
  "id": "HPL/Ayush/18-10-1",
  "suite": "HPL",
  "group": "Ayush",
  "run": "18-10-1",
  "dat": {
    "raw": "HPLinpack benchmark input file\nCustom quick test\nHPL.out      output file name (if any)\n6            device out (6=stdout,7=stderr,file)\n1            # of problems sizes (N)\n65536       Ns\n1            # of NBs\n256          NBs\n0            PMAP process mapping (0=Row-,1=Column-major)\n1            # of process grids (P x Q)\n4            Ps\n4            Qs\n16.0         threshold\n1            # of panel fact\n0            PFACTs (0=left, 1=Crout, 2=Right)\n1            # of recursive stopping criterium\n2            NBMINs (>= 1)\n1            # of panels in recursion\n2            NDIVs\n1            # of recursive panel fact.\n0            RFACTs (0=left, 1=Crout, 2=Right)\n1            # of broadcast\n2            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)\n1            # of lookahead depth\n1            DEPTHs (>=0)\n2            SWAP (0=bin-exch,1=long,2=mix)\n64           swapping threshold\n1            L1 in (0=transposed,1=no-transposed) form\n1            U  in (0=transposed,1=no-transposed) form\n1            Equilibration (0=no,1=yes)\n8            memory alignment in double (> 0)",
    "parsed": {
      "header": [
        "HPLinpack benchmark input file",
        "Custom quick test"
      ],
      "outputFilename": "HPL.out",
      "deviceOut": 6,
      "numProblemSizes": 1,
      "Ns": [
        65536
      ],
      "numNBs": 1,
      "NBs": [
        256
      ],
      "pmap": 0,
      "numGrids": 1,
      "Ps": [
        4
      ],
      "Qs": [
        4
      ],
      "threshold": 16,
      "numPFACT": 1,
      "PFACTs": [
        0,
        0,
        1,
        2
      ],
      "numNBMIN": 1,
      "NBMINs": [
        2,
        1
      ],
      "numPanelsInRecursion": 1,
      "NDIVs": [
        2
      ],
      "numRFACT": 1,
      "RFACTs": [
        0,
        0,
        1,
        2
      ],
      "numBCAST": 1,
      "BCASTs": [
        2,
        0,
        1,
        1,
        1,
        2,
        2,
        3,
        2,
        4,
        5
      ],
      "numDEPTH": 1,
      "DEPTHs": [
        1,
        0
      ],
      "swapMode": 2,
      "swapThreshold": 64,
      "L1": 1,
      "U": 1,
      "equilibration": 1,
      "memoryAlignment": 8
    },
    "path": "/raw/HPL/Ayush/18-10-1/HPL.dat"
  },
  "job": {
    "filename": "run.sh",
    "raw": "#!/bin/bash\n#SBATCH --job-name=hpl-cpu\n#SBATCH --nodes=4\n#SBATCH --ntasks-per-node=4          # 4 MPI ranks/node\n#SBATCH --cpus-per-task=8            # 8 threads per rank â‡’ 32 cores/node\n#SBATCH --time=10:00:00\n#SBATCH --exclusive\n\nmodule purge 2>/dev/null || true\nunset LD_PRELOAD\nexport HPCX_HOME=/home/hpc/hpcx/hpcx-v2.24-gcc-doca_ofed-ubuntu24.04-cuda13-x86_64\nsource \"$HPCX_HOME/hpcx-init.sh\"\nhpcx_load ompi ucx\n\n# UCX (IB + SHM only)\nexport UCX_TLS=rc_x,sm,self\nexport UCX_MEMTYPE_CACHE=n\nexport UCX_IB_PCI_RELAXED_ORDERING=off\nexport OMPI_MCA_pml=ucx\nexport OMPI_MCA_btl=^openib\n\n# Threading\nexport OMP_NUM_THREADS=8\nexport OMP_PROC_BIND=close\nexport OMP_PLACES=cores\n\nulimit -l unlimited\nulimit -n 65536\n\n# Run\nmpirun --map-by ppr:4:node:pe=8 --bind-to core ./xhpl",
    "sbatch": {
      "job-name": "hpl-cpu",
      "nodes": 4,
      "ntasks-per-node": null,
      "cpus-per-task": null,
      "time": "10:00:00",
      "exclusive": true
    },
    "path": "/raw/HPL/Ayush/18-10-1/run.sh"
  },
  "out": null,
  "err": {
    "path": "/raw/HPL/Ayush/18-10-1/run.sh-1251.err",
    "size": 84
  },
  "best": null
}