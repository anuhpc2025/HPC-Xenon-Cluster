{
  "id": "HPL/Will/nvhpl2",
  "suite": "HPL",
  "group": "Will",
  "run": "nvhpl2",
  "dat": {
    "raw": "HPLinpack benchmark input file\nInnovative Computing Laboratory, University of Tennessee\nHPL.out      output file name (if any)\n6            device out (6=stdout,7=stderr,file)\n1            # of problems sizes (N)\n262144       Ns\n1            # of NBs\n1024         NBs\n1            PMAP process mapping (0=Row-,1=Column-major)\n1            # of process grids (P x Q)\n2            Ps\n2            Qs\n16.0         threshold\n1            # of panel fact\n1            PFACTs (0=left, 1=Crout, 2=Right)\n1            # of recursive stopping criterium\n2 8          NBMINs (>= 1)\n1            # of panels in recursion\n2            NDIVs\n1            # of recursive panel fact.\n0 1 2        RFACTs (0=left, 1=Crout, 2=Right)\n1            # of broadcast\n3 2          BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)\n1            # of lookahead depth\n1 0          DEPTHs (>=0)\n2            SWAP (0=bin-exch,1=long,2=mix)\n192          swapping threshold\n1            L1 in (0=transposed,1=no-transposed) form\n1            U  in (0=transposed,1=no-transposed) form\n1            Equilibration (0=no,1=yes)\n32           memory alignment in double (> 0)",
    "parsed": {
      "header": [
        "HPLinpack benchmark input file",
        "Innovative Computing Laboratory, University of Tennessee"
      ],
      "outputFilename": "HPL.out",
      "deviceOut": 6,
      "numProblemSizes": 1,
      "Ns": [
        262144
      ],
      "numNBs": 1,
      "NBs": [
        1024
      ],
      "pmap": 1,
      "numGrids": 1,
      "Ps": [
        2
      ],
      "Qs": [
        2
      ],
      "threshold": 16,
      "numPFACT": 1,
      "PFACTs": [
        1,
        0,
        1,
        2
      ],
      "numNBMIN": 1,
      "NBMINs": [
        2,
        8,
        1
      ],
      "numPanelsInRecursion": 1,
      "NDIVs": [
        2
      ],
      "numRFACT": 1,
      "RFACTs": [
        0,
        1,
        2,
        0,
        1,
        2
      ],
      "numBCAST": 1,
      "BCASTs": [
        3,
        2,
        0,
        1,
        1,
        1,
        2,
        2,
        3,
        2,
        4,
        5
      ],
      "numDEPTH": 1,
      "DEPTHs": [
        1,
        0,
        0
      ],
      "swapMode": 2,
      "swapThreshold": 192,
      "L1": 1,
      "U": 1,
      "equilibration": 1,
      "memoryAlignment": 32
    },
    "path": "/raw/HPL/Will/nvhpl2/HPL.dat"
  },
  "job": {
    "filename": "job.sh",
    "raw": "#!/bin/bash\n#SBATCH --job-name=hpl-test       # Job name\n#SBATCH --ntasks=4                # Total MPI tasks\n#SBATCH --cpus-per-task=4        # CPU cores per MPI task\n#SBATCH --time=01:00:00           # Time limit hh:mm:ss\n#SBATCH --nodelist=node1\n\n# Load MPI module (adjust for your system)\n# module load openmpi\nexport CUDA_VISIBLE_DEVICES=0,1,2,3\nexport HPL_USE_GPU=1\nexport HPL_CUDA_MODE=1\n\nexport PATH=/opt/ompi-4.1.6/bin:$PATH\nexport LD_LIBRARY_PATH=/opt/ompi-4.1.6/lib:$LD_LIBRARY_PATH\nexport LD_LIBRARY_PATH=/usr/local/cuda-12.6/lib64:/opt/nvidia/nvidia_hpc_benchmarks_openmpi/lib/nvshmem:/opt/nvidia/nvidia_hpc_benchmarks_openmpi/lib/nccl:/opt/nvidia/nvidia_hpc_benchmarks_openmpi/lib:$LD_LIBRARY_PATH\n\n#testing\nulimit -l unlimited\nulimit -n 65536\n\n# Run the MPI program\nmpirun ./xhpl-nvidia",
    "sbatch": {
      "job-name": "hpl-test       # Job name",
      "ntasks": null,
      "cpus-per-task": null,
      "time": "01:00:00           # Time limit hh:mm:ss",
      "nodelist": "node1"
    },
    "path": "/raw/HPL/Will/nvhpl2/job.sh"
  },
  "out": null,
  "err": null,
  "best": null
}